---
import Button from '../components/Button.astro';
import { Linkedin } from 'simple-icons-astro';
import { Github } from 'simple-icons-astro';
import { Moon } from 'lucide-astro';
import { Sun } from 'lucide-astro';
import { AlignJustify } from 'lucide-astro';
---

<header
class="
 flex flex-row items-center justify-around space-y-2
 col-span-8 lg:flex lg:flex-row lg:justify-around lg:items-center lg:space-y-0
 border-b-2 border-slate-300 dark:border-indigo-500 shadow-sm 
 bg-gradient-to-r from-slate-100 from-20% via-indigo-100 via-60% to-slate-100 to-100% 
 dark:bg-gradient-to-r dark:from-slate-800 dark:from-20% dark:via-indigo-900 dark:via-60% dark:to-slate-900 dark:to-100%"
    >
    <div class="lg:hidden flex flex-row space-x-4">
        <AlignJustify small-nav-button class="w-8 h-8"></AlignJustify>
        <ul id="smallNavigation" class="hidden absolute z-50 left-9 top-9 px-1 text-lg text-center border-2 rounded-lg border-gray-300 bg-slate-400 dark:border-indigo-400 dark:bg-indigo-500 divide-y divide-slate-300 dark:divide-indigo-400">
            <li>
                <a href="/">Home</a>
            </li>
            <li>
                <a href="/manual">Manual</a>
            </li>
            <li>
                <a href="/automation">Automation</a>
            </li>
        </ul>
    </div>
    <div id="navContainer" class="flex flex-row space-x-2 lg:flex lg:flex-row lg:space-x-4 lg:space-y-0">
            <Button nav-button href="/">Home</Button>
            <Button nav-button href="/manual">Manual</Button>
            <Button nav-button href="/automation">Automation</Button>
    </div>
    <div>
        <ul class="list-none flex flex-row space-x-6">
            <div class="grid">
            <li id="darkContainer" class="col-start-1 row-start-1">
                <button id="darkModeToggle">
                    <Moon id="darkModeIcon" alt="Dark mode" class="hover:text-purple-500">
                </button>
            </li>
            <li id="lightContainer" class="col-start-1 row-start-1 hidden">
                <button id="lightModeToggle">
                    <Sun id="lightModeIcon" alt="Light mode" class="hover:text-purple-500 hidden">
                </button>
            </li>
            </div>
            <li id="linkedinDark" class="col-start-1 row-start-1">
                <a href="https://www.linkedin.com/in/piotr-gutowski-8b449b247/" target="_blank">
                    <Linkedin id="linkedDarkIcon" alt="Linkedin" class="hover:text-purple-500" />
                </a>
            </li>
            <li id="githubDark" class="col-start-1 row-start-1">
                <a href="https://github.com/pgutx" target="_blank">
                    <Github id="githubDarkIcon" alt="Github" class="hover:text-purple-500" />
                </a>
            </li>
        </ul>
    </div>
</header>

<script is:inline>
// DARK MODE TOGGLE ---------------------------------------------------------------
const darkMode = document.querySelector("#darkModeToggle");
const lightMode = document.querySelector("#lightModeToggle");
const darkModeIcon = document.querySelector("#darkModeIcon");
const lightModeIcon = document.querySelector("#lightModeIcon");
const darkContainer = document.querySelector("#darkContainer");
const lightContainer = document.querySelector("#lightContainer");


const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
      lightModeIcon.classList.add('hidden');
      lightContainer.classList.add('hidden');
      darkModeIcon.classList.remove('hidden');
      darkContainer.classList.remove('hidden');
    } else {
      document.documentElement.classList.add("dark");
      lightModeIcon.classList.remove('hidden');
      lightContainer.classList.remove('hidden');
      darkContainer.classList.add('hidden');
      darkModeIcon.classList.add('hidden');
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
       lightModeIcon.classList.remove('hidden');
       lightContainer.classList.remove('hidden');
       darkContainer.classList.add('hidden');
       darkModeIcon.classList.add('hidden');
    };
    const lightToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
       lightModeIcon.classList.add('hidden');
       lightContainer.classList.add('hidden');
       darkModeIcon.classList.remove('hidden');
       darkContainer.classList.remove('hidden');
    };

    darkMode.addEventListener('click',handleToggleClick);
    lightMode.addEventListener('click',lightToggleClick);
// END -------------------------------------------------------

const viewportQuery = window.matchMedia("(max-width: 600px)");
const getNavCont = document.querySelector('#navContainer');

const navbar = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("navbarStorage")) {
        return localStorage.getItem("navbarStorage");
      }
    if(window.matchMedia("(max-width: 600px)").matches){
        return "small";
    }
    return "large";
});

window.localStorage.setItem("navbarStorage", navbar);

if(navbar === "small"){
    getNavCont.classList.add('hidden');
} else{
    getNavCont.classList.add('hidden');
}

viewportQuery.addEventListener("change", (event) => {
    if(event.matches) { 
        localStorage.setItem("navbarStorage", "small");
    } else {
        localStorage.setItem("navbarStorage", "large");
    }
});

const smallNavButton = document.querySelector('[small-nav-button]');
const smallNavUL = document.querySelector('#smallNavigation');

smallNavButton.addEventListener('click', () => {
    if(smallNavUL.classList.contains('hidden')){
        smallNavUL.classList.remove('hidden');
    }else {
        smallNavUL.classList.add('hidden');
    }
});


</script>